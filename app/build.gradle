apply plugin: 'com.android.application'
//apply plugin: 'kotlin-android'

//apply plugin: 'kotlin-android-extensions'

def APP_ID = "com.cow.liucy"
def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}
android {
    compileSdkVersion rootProject.ext.compileSdk
    buildToolsVersion rootProject.ext.buildTools
    defaultConfig {
        multiDexEnabled true
        applicationId APP_ID
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        versionCode rootProject.ext.vCode
        versionName rootProject.ext.vName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
        dexOptions {
            javaMaxHeapSize "4g"
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ 'objectbox.debug' : 'true' ]
            }
        }
        renderscriptTargetApi 16
        renderscriptSupportModeEnabled true
    }

    signingConfigs {
        signConfig {
            storeFile file("platform.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
//            storeFile file("test.keystore")
//            storePassword 'android'
//            keyAlias 'android'
//            keyPassword 'android'
        }
    }

    dexOptions {
        // 这个不是解决方法数超过 65535 的，而且解决某些情况下 R 资源太多了，编译会报个错误
        // 还需要在 project.properties 中加入 dex.force.jumbo=true
        // for limit string in one dex file, we have too many R drawable(emoji)... ...
        jumboMode = true
        javaMaxHeapSize "4g"
    }
    buildTypes {
        debug {
            minifyEnabled false//是否允许混淆
            debuggable true
//            matchingFallbacks = ['beta', 'debug']
            buildConfigField( "boolean", "enableAES", "$rootProject.ext.enableAES")
            shrinkResources false
            zipAlignEnabled true
            signingConfig signingConfigs.signConfig // 配置包的签名
        }

        release {
            minifyEnabled true //混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField( "boolean", "enableAES", "$rootProject.ext.enableAES")
            shrinkResources false
            zipAlignEnabled true
            signingConfig signingConfigs.signConfig // 配置release包的签名
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    lintOptions {
        // 忽略 lint 检测出的错误，当然好的应用是应该打开这个选项
        // 但是打开后，只要 lint 检测出错误，就会编译失败，例如使用高于 min sdk level 的 api，layout 中缺少某几个元素的配置等等
        // 由于我们暂时没那么精力顾及这些，暂时关闭了
        abortOnError false
    }
//    flavorDimensions "version_code"
    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            //这里修改文件名
            output.outputFileName = "${defaultConfig.applicationId}-${buildType.name}-v${defaultConfig.versionName}_${defaultConfig.versionCode}_${releaseTime()}.apk"
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            java {
                srcDir 'src/main/java'
            }
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    defaultConfig {
        ndk {
            // 设置支持的SO库架构
            abiFilters  'armeabi-v7a'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/BCKEY.SF'
        exclude 'META-INF/BCKEY.DSA'

        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/BenchmarkList'
        exclude 'META-INF/io.netty.versions.properties'
        exclude 'META-INF/CompilerHints'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/maven/org.java-websocket/Java-WebSocket/pom.xml'
        exclude 'META-INF/proguard/androidx-annotations.pro'
        pickFirst("META-INF/atomicfu.kotlin_module")

        exclude 'lib/*/libRSSupport.so'
        exclude 'lib/*/librsjni.so'
        exclude 'lib/*/librsjni_androidx.so'

    }
    configurations.all {
        resolutionStrategy{
            force "com.android.support:support-annotations:${rootProject.ext.support}"
            force "com.android.support:appcompat-v7:${rootProject.ext.support}"
        }
    }
}

configurations {
//    implementation.exclude group: 'org.slf4j', module: 'slf4j-api'
//    implementation.exclude group: 'org.slf4j', module: 'jcl-over-slf4j'
    implementation.exclude group: 'org.springframework'
}

dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.aar'])
//    implementation(name: 'FacePassAndroidSDK-release', ext: 'aar')
//    implementation(name: 'ThermalSDK', ext: 'aar')
//    implementation(name: 'ThermalSDK2', ext: 'aar')
//    implementation(name: 'ThermalSDK3', ext: 'aar')
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:${rootProject.ext.support}"
    implementation "com.android.support:recyclerview-v7:${rootProject.ext.support}"
    implementation "com.android.support:cardview-v7:${rootProject.ext.support}"
    implementation "com.android.support:percent:${rootProject.ext.support}"

    //Android Shell
    api 'com.jaredrummler:android-shell:1.0.0'
    //    implementation"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.ext.runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
    implementation project(path: ':libcommon')
    implementation project(path: ':module_huoyan')
    implementation project(path: ':AndroidAsync')


    debugImplementation "io.objectbox:objectbox-android-objectbrowser:$objectboxVersion"

    releaseImplementation "io.objectbox:objectbox-android:$objectboxVersion"

    //    kapt "io.objectbox:objectbox-processor:$objectboxVersion"

    // some useful Kotlin extension functions
    implementation "io.objectbox:objectbox-kotlin:$objectboxVersion"
//    implementation 'com.dhh:websocket2:2.1.4'
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'
    api "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    //RxJava2
    implementation 'io.reactivex.rxjava2:rxjava:2.2.3'

    //Rxlife2
    implementation 'com.dhh:rxLife2:1.1.1'
    implementation 'com.github.huangyanbin:SmartTable:2.2.0'

    //permissions
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    //fresco
//    implementation 'com.facebook.fresco:fresco:1.13.0'

    //文件选择器
    implementation 'cn.imlibo:FilePicker:v0.0.5_alpha'

    //HTTP Server
//    implementation 'com.koushikdutta.async:androidasync:3.1.0'

    //    implementation 'org.webrtc:google-webrtc:1.0.23995'
//    compile(name: 'FacePassAndroidSDK-release', ext: 'aar')
//    compile 'com.android.volley:volley:1.0.0'

    //    compile 'com.jph.takephoto:takephoto_library:4.1.0'

    //    implementation 'com.camerakit:camerakit:1.0.0-beta3.10'

    //    implementation 'com.camerakit:jpegkit:0.1.0'

    //    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.0'

    //    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.0'

    //    implementation 'com.asksira.android:cameraviewplus:0.9.5'

    //

    //    implementation 'io.github.silvaren:easyrs:0.5.3'

    //    implementation ("com.priyankvasa.android:cameraview-ex:3.4.3"){

    //        exclude group: 'com.android.support', module: 'appcompat-v7'

    //    }

    //    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.21'

    //    implementation "com.android.support:exifinterface:${rootProject.ext.support}"

    //    def lifecycle_version = "2.0.0-beta01"

    //    implementation 'androidx.exifinterface:exifinterface:1.0.0'

    //    implementation 'androidx.lifecycle:lifecycle-common:2.1.0-alpha01'

    //    implementation 'androidx.annotation:annotation:1.1.0'

    //    implementation 'com.google.android.gms:play-services-tasks:15.0.0'

    //    implementation 'androidx.annotation:annotation:1.1.0'

    //        implementation 'com.otaliastudios:cameraview:2.0.0-rc1'

    //Android Utils工具包
    implementation 'com.blankj:utilcode:1.23.7'

    //di
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    implementation 'com.jakewharton:butterknife:8.8.1'

    //    compile 'net.sourceforge.jexcelapi:jxl:2.6.12'
//    implementation project(path: ':cameraview')

    //下拉刷新
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-32'

    //内存泄漏检测
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
//    implementation files('libs/Msc.jar')

    //添加jsch
    implementation 'com.jcraft:jsch:0.1.54'
    //二维码
    implementation 'cn.yipianfengye.android:zxing-library:2.2'
    api 'cn.hutool:hutool-all:5.1.3'

    implementation project(':apache-ftpserver-1.1.1:core')
    implementation project(':apache-ftpserver-1.1.1:ftplet-api')
    implementation 'commons-io:commons-io:2.6'
}
apply plugin: 'io.objectbox'
